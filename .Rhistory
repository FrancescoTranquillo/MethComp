p<-ggplot(tab_norep)+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")
p
CI_ex <- predict(fit.lm, interval="confidence")
colnames(CI_ex)<- c("fit_CI", "lwr_CI", "upr_CI")
#prediction interval for the linear regression:
PI_ex <- predict(fit.lm, interval="prediction")
colnames(PI_ex)<- c("fit_PI", "lwr_PI", "upr_PI")
#storing and plotting of the intervals:
var_results<-cbind(tab_norep,CI_ex, PI_ex)
p+
geom_line(aes(var_results$new_1, var_results$fit_CI))+
geom_line(aes(var_results$new_1, var_results$lwr_CI))+
p+
geom_line(aes(var_results$new_1, var_results$fit_CI))+
geom_line(aes(var_results$new_1, var_results$lwr_CI))+
p<-ggplot(tab_norep)+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
theme_classic()
p<-ggplot(tab_norep)+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
theme_classic()
p<-ggplot(tab_norep)+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
theme_classic()
p
p+
geom_line(aes(x=var_results$new_1, y=var_results$fit_CI))+
geom_line(aes(var_results$new_1, var_results$lwr_CI))+
p+
geom_line(aes(x=var_results$new_1, y=var_results$fit_CI))+
geom_line(aes(var_results$new_1, var_results$lwr_CI))+
p+
geom_line(aes(x=var_results$new_1, y=var_results$fit_CI))+
)  geom_line(aes(var_results$new_1, var_results$lwr_CI))+
p
var_results<-var_results[order(var_results$new_1)]
var_results<-var_results[order(var_results$new_1),]
View(var_results)
ggplot(var_results)
+geom_abline()
ggplot(var_results)+ geom_abline()
ggplot(var_results)+ geom_abline()+ geom_point()
p+
qplot(x=var_results$new_1, y=var_results$fit_CI)
p+
qplot(x=var_results$new_1, y=var_results$fit_CI)
p+
qplot(x=var_results$new_1, y=var_results$fit_CI)
qplot(x=var_results$new_1, y=var_results$fit_CI)
p+  qplot(x=var_results$new_1, y=var_results$fit_CI)
qplot(x=var_results$new_1, y=var_results$lwr_CI)
qplot(x=var_results$new_1, y=var_results$sup_CI)
qplot(x=var_results$new_1, y=var_results$upr_CI)
qplot(x=var_results$new_1, y=var_results$fit_CI)
+qplot(x=var_results$new_1, y=var_results$lwr_CI)
qplot(x=var_results$new_1, y=var_results$fit_CI)+ qplot(x=var_results$new_1, y=var_results$lwr_CI)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
lines(x=var_results$new_1, y=var_results$lwr_PI)
lines(x=var_results$new_1, y=var_results$upr_PI)
lines(x=var_results$new_1, y=var_results$fit_PI)
p<-ggplot(tab_norep)+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
theme_classic()
p<-ggplot(tab_norep)+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
theme_classic()
p<-ggplot(tab_norep)+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
theme_classic()
p<-ggplot(tab_norep)+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
theme_classic()
p
p<-ggplot(tab_norep)+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
p
p<-ggplot(tab_norep)+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")
p
p<-ggplot(tab_norep, aes(x="new"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")
p
p<-ggplot(tab_norep, aes(x="new", y=tab_norep$ref_1))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")
p
p<-ggplot(tab_norep, aes(x="new", y="tab_norep$ref_1"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")
p
p<-ggplot(tab_norep, aes_string(x="new", y="tab_norep$ref_1"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")
p
p<-ggplot(tab_norep, aes_string(x="new", y="ref"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")
p
View(var_results)
View(tab_norep)
library(reshape2)
melt<-melt(var_results)
View(melt)
ggplot(var_results)
ggplot(var_results)+
geom_point()
View(melt)
melt<-melt(var_results, var_results$new_1)
View(melt)
melt<-melt(var_results, var=var_results$new_1)
melt<-melt(var_results, var="var_results$new_1")
View(melt)
melt<-melt(var_results, var=c(var_results$new_1))
melt<-melt(var_results, var=c("var_results$new_1", "var_results$ref_1"))
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
lines(x=var_results$new_1, y=var_results$lwr_PI)
lines(x=var_results$new_1, y=var_results$upr_PI)
lines(x=var_results$new_1, y=var_results$fit_PI)
p
+
geom_line(data=var_results$lwr_PI)
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI))
p
p +  geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI))
p +  geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI, color ="red"))
p +  geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI))
p+  geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
p +  geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI))
+  geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
p +  geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI)) +
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
lines(x=var_results$new_1, y=var_results$lwr_PI)
lines(x=var_results$new_1, y=var_results$upr_PI)
lines(x=var_results$new_1, y=var_results$fit_PI)
p<-ggplot(tab_norep, aes_string(x="new", y="ref"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")
p +  geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI)) +
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
CI_ex <- predict(fit.lm, interval="confidence")
p<-p +  geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI)) +
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
ggplotly(p)
p<-ggplot(tab_norep, aes_string(x="new", y="ref"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1, color="red"))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")
p<-p +  geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI)) +
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
ggplotly(p)
library(plotly)
library(ggplot2)
library(MethComp)
#delete record number 99
df<-df[-c(393:396),]
head(df)
#RBC only
df<-df[,-c(1, 5:25)]
ref_1<-df[df$methods=="Procyte Idexx" & df$replicate==1, 3]
ref_2<-df[df$methods=="Procyte Idexx" & df$replicate==2, 3]
#table with replicates
tab_rep<-data.frame(new_1, new_2, ref_1, ref_2)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
fit.lm<- lm(tab_norep$ref_1 ~ tab_norep$ new_1)
#### Data Preparation ####
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
new_2<-df[df$methods=="DF-50" & df$replicate==2, 3]
#table without replicates
tab_norep<-data.frame(new_1, ref_1)
#extract values derived by specific method and replicate number and store them into vectors
new_1<-df[df$methods=="DF-50" & df$replicate==1, 3]
library(reshape2)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
ggplot(tab_norep, aes_string(x="new", y="ref"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI, color=var_results$fit_PI)) +
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
CI_ex <- predict(fit.lm, interval="confidence")
colnames(CI_ex)<- c("fit_CI", "lwr_CI", "upr_CI")
#prediction interval for the linear regression:
PI_ex <- predict(fit.lm, interval="prediction")
colnames(PI_ex)<- c("fit_PI", "lwr_PI", "upr_PI")
#storing and plotting of the intervals:
var_results<-cbind(tab_norep,CI_ex, PI_ex)
var_results<-var_results[order(var_results$new_1),]
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
lines(x=var_results$new_1, y=var_results$lwr_PI)
lines(x=var_results$new_1, y=var_results$upr_PI)
lines(x=var_results$new_1, y=var_results$fit_PI)
source('~/GitHub/MethComp/prediction interval.R', echo=TRUE)
#table without replicates
tab_norep<-data.frame(new_1, ref_1)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
fit.lm<- lm(tab_norep$ref_1 ~ tab_norep$ new_1)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
ggplot(tab_norep, aes_string(x="new", y="ref"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI, color=var_results$fit_PI)) +
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
CI_ex <- predict(fit.lm, interval="confidence")
colnames(CI_ex)<- c("fit_CI", "lwr_CI", "upr_CI")
#prediction interval for the linear regression:
PI_ex <- predict(fit.lm, interval="prediction")
colnames(PI_ex)<- c("fit_PI", "lwr_PI", "upr_PI")
#storing and plotting of the intervals:
var_results<-cbind(tab_norep,CI_ex, PI_ex)
var_results<-var_results[order(var_results$new_1),]
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
lines(x=var_results$new_1, y=var_results$lwr_PI)
lines(x=var_results$new_1, y=var_results$upr_PI)
lines(x=var_results$new_1, y=var_results$fit_PI)
install.packages("BivRegBLS")
library(BivRegBLS)
RCB.BLS=BLS(data=tab_norep, xcol=c("new"), ycol=c("Reference"))
XY.plot(RCB.BLS, graph.int = C("CI","PI"))
View(tab_norep)
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"))
XY.plot(RCB.BLS, graph.int = C("CI","PI"))
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"))
var("new_1")
varx= var(tab_norep$new_1)
vary= var(tab_norep$ref_1)
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = vary, var.x = varx, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = C("CI","PI"))
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = vary, var.x = varx, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = C("CI","PI"))
XY.plot(RCB.BLS)
XY.plot(RCB.BLS, graph.int = "CI")
XY.plot(RCB.BLS, graph.int = c("CI", "PI")
XY.plot(RCB.BLS, graph.int = c("CI", "PI"))
XY.plot(RCB.BLS, graph.int = c("CI", "PI"))
varx= var(tab_norep$new_1)
vary= var(tab_norep$ref_1)
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = vary, var.x = varx, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"))
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = 10, var.x = 8, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"))
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = 80, var.x = 8, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"))
varx= var(tab_norep$new_1)
vary= var(tab_norep$ref_1)
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = 80, var.x = 8, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"))
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = 1 var.x = 2, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"))
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = 1 ,var.x = 2, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"))
XY.plot(RCB.BLS, graph.int = c("CI", "PI"),accept.int = 10)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"),accept.int = 2)
library(plotly)
library(ggplot2)
library(MethComp)
library(reshape2)
library(BivRegBLS)
#### Data Preparation ####
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
#delete record number 99
df<-df[-c(393:396),]
head(df)
#RBC only
df<-df[,-c(1, 5:25)]
#extract values derived by specific method and replicate number and store them into vectors
new_1<-df[df$methods=="DF-50" & df$replicate==1, 3]
new_2<-df[df$methods=="DF-50" & df$replicate==2, 3]
ref_1<-df[df$methods=="Procyte Idexx" & df$replicate==1, 3]
ref_2<-df[df$methods=="Procyte Idexx" & df$replicate==2, 3]
#table with replicates
tab_rep<-data.frame(new_1, new_2, ref_1, ref_2)
#table without replicates
tab_norep<-data.frame(new_1, ref_1)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
fit.lm<- lm(tab_norep$ref_1 ~ tab_norep$ new_1)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
ggplot(tab_norep, aes_string(x="new", y="ref"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI, color=var_results$fit_PI)) +
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
CI_ex <- predict(fit.lm, interval="confidence")
colnames(CI_ex)<- c("fit_CI", "lwr_CI", "upr_CI")
#prediction interval for the linear regression:
PI_ex <- predict(fit.lm, interval="prediction")
colnames(PI_ex)<- c("fit_PI", "lwr_PI", "upr_PI")
#storing and plotting of the intervals:
var_results<-cbind(tab_norep,CI_ex, PI_ex)
var_results<-var_results[order(var_results$new_1),]
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
lines(x=var_results$new_1, y=var_results$lwr_PI)
lines(x=var_results$new_1, y=var_results$upr_PI)
lines(x=var_results$new_1, y=var_results$fit_PI)
varx= var(tab_norep$new_1)
vary= var(tab_norep$ref_1)
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = 1 ,var.x = 2, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"),accept.int = 2)
varx= var(tab_norep$new_1)
vary= var(tab_norep$ref_1)
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = vary ,var.x = varx, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"),accept.int = 2)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"),accept.int = 20)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
fit.lm<- lm(tab_norep$ref_1 ~ tab_norep$ new_1)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
ggplot(tab_norep, aes_string(x="new", y="ref"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI, color=var_results$fit_PI)) +
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
ggplot(tab_norep, aes_string(x="new", y="ref"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI)) +
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
CI_ex <- predict(fit.lm, interval="confidence")
colnames(CI_ex)<- c("fit_CI", "lwr_CI", "upr_CI")
#prediction interval for the linear regression:
PI_ex <- predict(fit.lm, interval="prediction")
colnames(PI_ex)<- c("fit_PI", "lwr_PI", "upr_PI")
#storing and plotting of the intervals:
var_results<-cbind(tab_norep,CI_ex, PI_ex)
var_results<-var_results[order(var_results$new_1),]
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= "RBC new method",
ylab= "RBC reference method"
)
lines(x=var_results$new_1, y=var_results$lwr_PI)
lines(x=var_results$new_1, y=var_results$upr_PI)
lines(x=var_results$new_1, y=var_results$fit_PI)
varx= var(tab_norep$new_1)
vary= var(tab_norep$ref_1)
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = vary ,var.x = varx, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"),accept.int = 20)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"),accept.int = 1)
cat(ciao)
cat("ciao")
cat(colnames(df[3]), "new")
i=3
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= list(colnames(df[i]),"new method")
ylab= list(colnames(df[i],"reference method"))
)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= colnames(df[i]),"new method"
ylab= list(colnames(df[i],"reference method"))
)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= paste0(colnames(df[i]),"new method")
ylab= list(colnames(df[i],"reference method"))
)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= paste0(colnames(df[i]),"new method"),
ylab= paste0(colnames(df[i],"reference method"))
)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= paste0(colnames(df[i]),"new method"),
ylab= paste0(colnames(df[i],"reference method"))
)
i=3
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= paste0(colnames(df[i]),"new method"),
ylab= paste0(colnames(df[i],"reference method"))
)
i=3
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= paste0(colnames(df[i]),"new method"),
ylab= paste0(colnames(df[i]),"reference method")
)
i=3
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= paste0(colnames(df[i])," new method"),
ylab= paste0(colnames(df[i])," reference method")
)
plot(tab_norep$new_1, tab_norep$ref_1,
xlab= paste0(colnames(df[i])," new method"),
ylab= paste0(colnames(df[i])," reference method"),
title(main=list(colnames(df[i]), col="red"))
)
ggplot(tab_norep, aes_string(x="new", y="ref"))+
geom_point(aes(tab_norep$new_1, tab_norep$ref_1))+
#Adding the regression line#
geom_abline(slope=fit.lm$coefficients[2], intercept=fit.lm$coefficients[1])+
#Adding the identity line
geom_abline(slope=1, intercept=0, color="blue")+
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$lwr_PI)) +
geom_line(data=var_results, aes(x=var_results$new_1, y=var_results$upr_PI))
varx= var(tab_norep$new_1)
vary= var(tab_norep$ref_1)
RCB.BLS=BLS(data=tab_norep, xcol=c("new_1"), ycol=c("ref_1"), var.y = vary ,var.x = varx, conf.level=0.95)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"),accept.int = 1)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"),accept.int = 9)
XY.plot(RCB.BLS, graph.int = c("CI", "PI"),accept.int = 5)
